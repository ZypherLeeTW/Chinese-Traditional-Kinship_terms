問題5：輩分計算機的算法優化

寫到一半才發現用when()語法下去寫並不是一個好主意，不但造成讀取的緩慢
還會再轉寫與debug過程中非常辛苦

因此以後遇到有需要查表的專案時，強烈建議用其他例如csv或者jason檔案的存放方式。
我是寫到最後優化的時候發現問題，已經來不及修正了

計算機原理-
從btn.Listener()監聽到數入的原件
顯示上展示[稱呼1] + ["的"][稱呼2] + ["的"][稱呼3] +.....+ ["的"][稱呼n](使用.plus()實現)
陣列存放['稱呼1','稱呼2',...,'稱呼n'](使用ArrayList.add()實現)

運算：
for 迴圈
[1]跟[2]查表取得新稱呼取代[2]
[2]跟[3]查表取得新稱呼取代[3]
....
[n-1]跟[n]查表取得新稱呼取代[n]
最終輸出結果[n]

如果查詢不到顯示[超出計算]

另外在面對爸爸 的 爸爸 的 爸爸......
無限向上加輩分的直系血親關係
有特別寫一個加輩器
專門在稱呼前面疊上["曾曾曾...."]祖父

實現原理：
當[祖父]+[爸爸]則依舊紀錄為[祖父],紀錄 += 1
當[祖父]+[祖父]則依舊紀錄為[祖父],紀錄 += 2
另外變數紀錄應該加上多少個["曾"]
最後在顯示上疊加回去
